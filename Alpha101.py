alpha_dict = {
    "Alpha001": "(cs_rank(ts_argmax(signedpower(where((daily_ret < 0), ts_stddev(daily_ret, 20), Close), 2), 5)) - 0.5)",
    "Alpha002": "(-1*correlation(cs_rank(ts_delta(log(Volume), 2)), cs_rank(((Close - Open) / Open)), 6))",
    "Alpha003": "(-1*correlation(cs_rank(Open), cs_rank(Volume), 10))",
    "Alpha004": "(-1*ts_rank(cs_rank(Low), 9))",
    "Alpha005": "(cs_rank((Open - (ts_sum(Vwap, 10) / 10)))*(-1*abs(cs_rank((Close - Vwap)))))",
    "Alpha006": "(-1 * correlation(Open, Volume, 10))",
    #"Alpha007": Can only compare identically-labeled (both index and columns) DataFrame objects,
    "Alpha008": "-1*cs_rank(((ts_sum(Open, 5)*ts_sum(daily_ret, 5)) - delay((ts_sum(Open, 5)*ts_sum(daily_ret, 5)), 10)))",
    "Alpha009": "where((0 < ts_min(ts_delta(Close, 1), 5)) , ts_delta(Close, 1) , where((ts_max(ts_delta(Close, 1), 5) < 0) , ts_delta(Close, 1) , (-1*ts_delta(Close, 1))))",
    "Alpha010": "cs_rank(where((0 < ts_min(ts_delta(Close, 1), 4)) , ts_delta(Close, 1) , where((ts_max(ts_delta(Close, 1), 4) < 0) , ts_delta(Close, 1) , (-1*ts_delta(Close, 1)))))",
    "Alpha011": "((cs_rank(ts_max((Vwap - Close), 3)) + cs_rank(ts_min((Vwap - Close), 3)))*cs_rank(ts_delta(Volume, 3)))",
    "Alpha012": "(sign(ts_delta(Volume, 1))*(-1 * ts_delta(Close, 1)))",
    "Alpha013": "(-1*cs_rank(covariance(cs_rank(Close), cs_rank(Volume), 5)))",
    "Alpha014": "((-1*cs_rank(ts_delta(daily_ret, 3)))*correlation(Open, Volume, 10))",
    "Alpha015": "(-1*ts_sum(cs_rank(correlation(cs_rank(High), cs_rank(Volume), 3)), 3))",
    "Alpha016": "(-1*cs_rank(covariance(cs_rank(High), cs_rank(Volume), 5)))",
    "Alpha017": "(((-1*cs_rank(ts_rank(Close, 10)))*cs_rank(ts_delta(ts_delta(Close, 1), 1)))*cs_rank(ts_rank((Volume / ts_mean(Value_Dollars,20)), 5)))",
    "Alpha018": "(-1*cs_rank(((ts_stddev(abs((Close - Open)), 5) + (Close - Open)) + correlation(Close, Open, 10))))",
    "Alpha019": "((-1*sign(((Close - delay(Close, 7)) + ts_delta(Close, 7))))*(1 + cs_rank((1 + ts_sum(daily_ret, 250)))))",
    "Alpha020": "(((-1*cs_rank((Open - delay(High, 1))))* cs_rank((Open - delay(Close, 1))))* cs_rank((Open - delay(Low, 1))))",
    
    "Alpha020": "(((-1*cs_rank((Open - delay(High, 1))))* cs_rank((Open - delay(Close, 1))))* cs_rank((Open - delay(Low, 1))))",
    "Alpha021": "where((((ts_sum(Close, 8) / 8) + ts_stddev(Close, 8)) < (ts_sum(Close, 2) / 2)) , -1 , where(((ts_sum(Close, 2) / 2) < ((ts_sum(Close, 8) / 8) - ts_stddev(Close, 8))) , 1 , where(((1 < (Volume / ts_mean(Value_Dollars,20))) | ((Volume / ts_mean(Value_Dollars,20)) == 1)) , 1 , -1)))",
    "Alpha022": "(-1* (ts_delta(correlation(High, Volume, 5), 5)* cs_rank(ts_stddev(Close, 20))))",
    "Alpha023": "where(((ts_sum(High, 20) / 20) < High) , (-1* ts_delta(High, 2)) , 0)",
    "Alpha024": "where((((ts_delta((ts_sum(Close, 100) / 100), 100) / delay(Close, 100)) < 0.05) | ((ts_delta((ts_sum(Close, 100) / 100), 100) / delay(Close, 100)) == 0.05)) , (-1* (Close - ts_min(Close, 100))) , (-1* ts_delta(Close, 3)))",
    "Alpha025": "cs_rank(((((-1* daily_ret)* ts_mean(Value_Dollars,20))* Vwap)* (High - Close)))",
    "Alpha026": "(-1* ts_max(correlation(ts_rank(Volume, 5), ts_rank(High, 5), 5), 3))",
    "Alpha027": "where((0.5 < cs_rank((ts_sum(correlation(cs_rank(Volume), cs_rank(Vwap), 6), 2) / 2.0))) , -1 , 1)",
    "Alpha028": "cs_scale(((correlation(ts_mean(Value_Dollars,20), Low, 5) + ((High + Low) / 2)) - Close))",
    "Alpha029": "(min(ts_product(cs_rank(cs_rank(cs_scale(log(ts_sum(ts_min(cs_rank(cs_rank((-1*cs_rank(ts_delta((Close - 1), 5))))), 2), 1))))), 1), 5) + ts_rank(delay((-1* daily_ret), 6), 5))",
    "Alpha030": "(((1.0 - cs_rank(((sign((Close - delay(Close, 1))) + sign((delay(Close, 1) - delay(Close, 2)))) + sign((delay(Close, 2) - delay(Close, 3))))))* ts_sum(Volume, 5)) / ts_sum(Volume, 20))",
    "Alpha031": "((cs_rank(cs_rank(cs_rank(ts_decay_linear((-1* cs_rank(cs_rank(ts_delta(Close, 10)))), 10)))) + cs_rank((-1* ts_delta(Close, 3)))) + sign(cs_scale(correlation(ts_mean(Value_Dollars,20), Low, 12))))",
    "Alpha032": "(cs_scale(((ts_sum(Close, 7) / 7) - Close)) + (20* cs_scale(correlation(Vwap, delay(Close, 5), 230))))",
    "Alpha033": "cs_rank((-1* ((1 - (Open / Close))**1)))",
    "Alpha034": "cs_rank(((1 - cs_rank((ts_stddev(daily_ret, 2) / ts_stddev(daily_ret, 5)))) + (1 - cs_rank(ts_delta(Close, 1)))))",
    "Alpha035": "((ts_rank(Volume, 32)* (1 - ts_rank(((Close + High) - Low), 16)))* (1 - ts_rank(daily_ret, 32)))",
    "Alpha036": "(((((2.21* cs_rank(correlation((Close - Open), delay(Volume, 1), 15))) + (0.7* cs_rank((Open - Close)))) + (0.73* cs_rank(ts_rank(delay((-1* daily_ret), 6), 5)))) + cs_rank(abs(correlation(Vwap, ts_mean(Value_Dollars,20), 6)))) + (0.6* cs_rank((((ts_sum(Close, 200) / 200) - Open)* (Close - Open)))))",
    "Alpha037": "(cs_rank(correlation(delay((Open - Close), 1), Close, 200)) + cs_rank((Open - Close)))",
    "Alpha038": "((-1* cs_rank(ts_rank(Close, 10)))* cs_rank((Close / Open)))",
    "Alpha039": "((-1* cs_rank((ts_delta(Close, 7)* (1 - cs_rank(ts_decay_linear((Volume / ts_mean(Value_Dollars,20)), 9))))))* (1 + cs_rank(ts_sum(daily_ret, 250))))",
    "Alpha040": "((-1* cs_rank(ts_stddev(High, 10)))* correlation(High, Volume, 10))",

    "Alpha041": "(((High* Low)**0.5) - Vwap)",
    "Alpha042": "(cs_rank((Vwap - Close)) / cs_rank((Vwap + Close)))",
    "Alpha043": "(ts_rank((Volume / ts_mean(Value_Dollars,20)), 20)* ts_rank((-1* ts_delta(Close, 7)), 8))",
    "Alpha044": "(-1* correlation(High, cs_rank(Volume), 5))",
    "Alpha045": "(-1* ((cs_rank((ts_sum(delay(Close, 5), 20) / 20))* correlation(Close, Volume, 2))* cs_rank(correlation(ts_sum(Close, 5), ts_sum(Close, 20), 2))))",
    "Alpha046": "where((0.25 < (((delay(Close, 20) - delay(Close, 10)) / 10) - ((delay(Close, 10) - Close) / 10))) , -1 , where(((((delay(Close, 20) - delay(Close, 10)) / 10) - ((delay(Close, 10) - Close) / 10)) < 0) , 1 , (-1* (Close - delay(Close, 1)))))",
    "Alpha047": "((((cs_rank((1 / Close))* Volume) / ts_mean(Value_Dollars,20))* ((High* cs_rank((High - Close))) / (ts_sum(High, 5) / 5))) - cs_rank((Vwap - delay(Vwap, 5))))",
    #"Alpha048": "raise NotImplementedError('alpha fun no indneutralize')",
    "Alpha049": "where(((((delay(Close, 20) - delay(Close, 10)) / 10) - ((delay(Close, 10) - Close) / 10)) < (-0.1)) , 1 , (-1* (Close - delay(Close, 1))))",
    "Alpha050": "(-1* ts_max(cs_rank(correlation(cs_rank(Volume), cs_rank(Vwap), 5)), 5))",
    "Alpha051": "where(((((delay(Close, 20) - delay(Close, 10)) / 10) - ((delay(Close, 10) - Close) / 10)) < (-1* 0.05)) , 1 , (-1* (Close - delay(Close, 1))))",
    "Alpha052": "((((-1* ts_min(Low, 5)) + delay(ts_min(Low, 5), 5))* cs_rank(((ts_sum(daily_ret, 240) - ts_sum(daily_ret, 20)) / 220)))* ts_rank(Volume, 5))",
    "Alpha053": "(-1* ts_delta((((Close - Low) - (High - Close)) / (Close - Low)), 9))",
    "Alpha054": "((-1* ((Low - Close)* (Open**5))) / ((Low - High)* (Close**5)))",
    "Alpha055": "(-1* correlation(cs_rank(((Close - ts_min(Low, 12)) / (ts_max(High, 12) - ts_min(Low, 12)))), cs_rank(Volume), 6))",
    "Alpha056": "(0 - (1* (cs_rank((ts_sum(daily_ret, 10) / ts_sum(ts_sum(daily_ret, 2), 3)))* cs_rank((daily_ret* mktcap)))))",
    "Alpha057": "(0 - (1* ((Close - Vwap) / ts_decay_linear(cs_rank(ts_argmax(Close, 30)), 2))))",
    #"Alpha058": "raise NotImplementedError('alpha fun no indneutralize')",
    #"Alpha059": "raise NotImplementedError('alpha fun no indneutralize')",
    "Alpha060": "(0 - (1* ((2* cs_scale(cs_rank(((((Close - Low) - (High - Close)) / (High - Low))* Volume)))) - cs_scale(cs_rank(ts_argmax(Close, 10))))))",

    "Alpha061": "where(cs_rank((Vwap - ts_min(Vwap, 16))) < cs_rank(correlation(Vwap, ts_mean(Value_Dollars,180), 18)) , 1, 0)",
    #"Alpha062": Can only compare identically-labeled (both index and columns) DataFrame objects,
    #"Alpha063": "raise NotImplementedError('alpha fun no indneutralize')",
    "Alpha064": "((cs_rank(correlation(ts_sum(((Open* 0.178404) + (Low* (1 - 0.178404))), 13), ts_sum(ts_mean(Value_Dollars,120), 13), 17)) < cs_rank(ts_delta(((((High + Low) / 2)* 0.178404) + (Vwap* (1 - 0.178404))), 4)))* -1)",
    # "Alpha065": "((cs_rank(correlation(((Open* 0.00817205) + (Vwap* (1 - 0.00817205))), ts_sum(ts_mean(Value_Dollars,60), 9), 6)) < cs_rank((Open - ts_min(Open, 14))))* -1)",
    "Alpha066": "((cs_rank(ts_decay_linear(ts_delta(Vwap, 4), 7)) + ts_rank(ts_decay_linear(((((Low* 0.96633) + (Low* (1 - 0.96633))) - Vwap) / (Open - ((High + Low) / 2))), 11), 7))* -1)",
    #"Alpha067": "raise NotImplementedError('alpha fun no indneutralize')",
    # "Alpha068": "((ts_rank(correlation(cs_rank(High), cs_rank(ts_mean(Value_Dollars,15)), 9), 14) < cs_rank(ts_delta(((Close* 0.518371) + (Low* (1 - 0.518371))), 1)))* -1)",
    #"Alpha069": "raise NotImplementedError('alpha fun no indneutralize')",
    #"Alpha070": "raise NotImplementedError('alpha fun no indneutralize')",
    "Alpha071": "max(ts_rank(ts_decay_linear(correlation(ts_rank(Close, 3), ts_rank(ts_mean(Value_Dollars,180), 12), 18), 4), 16), ts_rank(ts_decay_linear((cs_rank(((Low + Open) - (Vwap + Vwap)))**2), 16), 4))",
    "Alpha072": "(cs_rank(ts_decay_linear(correlation(((High + Low) / 2), ts_mean(Value_Dollars,40), 9), 10)) / cs_rank(ts_decay_linear(correlation(ts_rank(Vwap, 4), ts_rank(Volume, 19), 7), 3)))",
    "Alpha073": "(max(cs_rank(ts_decay_linear(ts_delta(Vwap, 5), 3)), ts_rank(ts_decay_linear(((ts_delta(((Open* 0.147155) + (Low* (1 - 0.147155))), 2) / ((Open* 0.147155) + (Low* (1 - 0.147155))))* -1), 3), 17))* -1)",
    # "Alpha074": "((cs_rank(correlation(Close, ts_sum(ts_mean(Value_Dollars,30), 37), 15)) < cs_rank(correlation(cs_rank(((High* 0.0261661) + (Vwap* (1 - 0.0261661)))), cs_rank(Volume), 11)))* -1)",
    # "Alpha075": "(cs_rank(correlation(Vwap, Volume, 4)) < cs_rank(correlation(cs_rank(Low), cs_rank(ts_mean(Value_Dollars,50)), 12)))",
    #"Alpha076": "raise NotImplementedError('alpha fun no indneutralize')",
    "Alpha077": "min(cs_rank(ts_decay_linear(((((High + Low) / 2) + High) - (Vwap + High)), 20)), cs_rank(ts_decay_linear(correlation(((High + Low) / 2), ts_mean(Value_Dollars,40), 3), 6)))",
    "Alpha078": "(cs_rank(correlation(ts_sum(((Low* 0.352233) + (Vwap* (1 - 0.352233))), 20), ts_sum(ts_mean(Value_Dollars,40), 20), 7))**cs_rank(correlation(cs_rank(Vwap), cs_rank(Volume), 6)))",
    #"Alpha079": "raise NotImplementedError('alpha fun no indneutralize')",
    #"Alpha080": "raise NotImplementedError('alpha fun no indneutralize')",
    "Alpha081": "((cs_rank(log(ts_product(cs_rank((cs_rank(correlation(Vwap, ts_sum(ts_mean(Value_Dollars,10), 50), 8))**4)), 15))) < cs_rank(correlation(cs_rank(Vwap), cs_rank(Volume), 5)))* -1)",
    #"Alpha082": "raise NotImplementedError('alpha fun no indneutralize')",
    "Alpha083": "((cs_rank(delay(((High - Low) / (ts_sum(Close, 5) / 5)), 2))* cs_rank(cs_rank(Volume))) / (((High - Low) / (ts_sum(Close, 5) / 5)) / (Vwap - Close)))",
    "Alpha084": "signedpower(ts_rank((Vwap - ts_max(Vwap, 15)), 21), ts_delta(Close, 5))",
    "Alpha085": "(cs_rank(correlation(((High* 0.876703) + (Close* (1 - 0.876703))), ts_mean(Value_Dollars,30), 10))**cs_rank(correlation(ts_rank(((High + Low) / 2), 4), ts_rank(Volume, 10), 7)))",
    # "Alpha086": "((ts_rank(correlation(Close, ts_sum(ts_mean(Value_Dollars,20), 15), 6), 20) < cs_rank(((Open + Close) - (Vwap + Open))))* -1)",
    #"Alpha087": "raise NotImplementedError('alpha fun no indneutralize')",
    "Alpha088": "min(cs_rank(ts_decay_linear(((cs_rank(Open) + cs_rank(Low)) - (cs_rank(High) + cs_rank(Close))), 8)), ts_rank(ts_decay_linear(correlation(ts_rank(Close, 8), ts_rank(ts_mean(Value_Dollars,60), 21), 8), 7), 3))",
    #"Alpha089": "raise NotImplementedError('alpha fun no indneutralize')",
    #"Alpha090": "raise NotImplementedError('alpha fun no indneutralize')",
    #"Alpha091": "raise NotImplementedError('alpha fun no indneutralize')",
    "Alpha092": "min(ts_rank(ts_decay_linear(((((High + Low) / 2) + Close) < (Low + Open)) * 1.0, 15), 19), ts_rank(ts_decay_linear(correlation(cs_rank(Low), cs_rank(ts_mean(Value_Dollars,30)), 8), 7), 7))",
    #"Alpha093": "raise NotImplementedError('alpha fun no indneutralize')",
    "Alpha094": "((cs_rank((Vwap - ts_min(Vwap, 12)))**ts_rank(correlation(ts_rank(Vwap, 20), ts_rank(ts_mean(Value_Dollars,60), 4), 18), 3))* -1)",
    # "Alpha095": "(cs_rank((Open - ts_min(Open, 12))) < ts_rank((cs_rank(correlation(ts_sum(((High + Low) / 2), 19), ts_sum(ts_mean(Value_Dollars,40), 19), 13))**5), 12))",
    "Alpha096": "(max(ts_rank(ts_decay_linear(correlation(cs_rank(Vwap), cs_rank(Volume), 4), 4), 8), ts_rank(ts_decay_linear(ts_argmax(correlation(ts_rank(Close, 7), ts_rank(ts_mean(Value_Dollars,60), 4), 4), 13), 14), 13))* -1)",
    #"Alpha097": "raise NotImplementedError('alpha fun no indneutralize')",
    "Alpha098": "(cs_rank(ts_decay_linear(correlation(Vwap, ts_sum(ts_mean(Value_Dollars,5), 26), 5), 7)) - cs_rank(ts_decay_linear(ts_rank(ts_argmin(correlation(cs_rank(Open), cs_rank(ts_mean(Value_Dollars,15)), 21), 9), 7), 8)))",
    "Alpha099": "((cs_rank(correlation(ts_sum(((High + Low) / 2), 20), ts_sum(ts_mean(Value_Dollars,60), 20), 9)) < cs_rank(correlation(Low, Volume, 6)))* -1)",
    #"Alpha100": "raise NotImplementedError('alpha fun no indneutralize')",
    "Alpha101": "((Close - Open) / ((High - Low) + .001))"
}